<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="55" passed="55">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="980" started-at="2013-05-13T13:11:40Z" finished-at="2013-05-13T13:11:41Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="980" started-at="2013-05-13T13:11:40Z" finished-at="2013-05-13T13:11:41Z">
      <class name="org.artifactory.api.security.AceInfoTest">
        <test-method status="PASS" signature="adminMaskOnly()[pri:0, instance:org.artifactory.api.security.AceInfoTest@3ed9a7a6]" name="adminMaskOnly" duration-ms="33" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminMaskOnly -->
        <test-method status="PASS" signature="allMasks()[pri:0, instance:org.artifactory.api.security.AceInfoTest@3ed9a7a6]" name="allMasks" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allMasks -->
        <test-method status="PASS" signature="copyConstructor()[pri:0, instance:org.artifactory.api.security.AceInfoTest@3ed9a7a6]" name="copyConstructor" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructor -->
        <test-method status="PASS" signature="annotatorMaskOnly()[pri:0, instance:org.artifactory.api.security.AceInfoTest@3ed9a7a6]" name="annotatorMaskOnly" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- annotatorMaskOnly -->
        <test-method status="PASS" signature="copyConstructorReflectionEquality()[pri:0, instance:org.artifactory.api.security.AceInfoTest@3ed9a7a6]" name="copyConstructorReflectionEquality" duration-ms="10" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorReflectionEquality -->
        <test-method status="PASS" signature="deleterMaskOnly()[pri:0, instance:org.artifactory.api.security.AceInfoTest@3ed9a7a6]" name="deleterMaskOnly" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleterMaskOnly -->
        <test-method status="PASS" signature="deployerMaskOnly()[pri:0, instance:org.artifactory.api.security.AceInfoTest@3ed9a7a6]" name="deployerMaskOnly" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deployerMaskOnly -->
        <test-method status="PASS" signature="readerMaskOnly()[pri:0, instance:org.artifactory.api.security.AceInfoTest@3ed9a7a6]" name="readerMaskOnly" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readerMaskOnly -->
      </class> <!-- org.artifactory.api.security.AceInfoTest -->
      <class name="org.artifactory.storage.fs.tree.file.JavaIOFileAdapterTest">
        <test-method status="PASS" signature="fileInfoAdapter()[pri:0, instance:org.artifactory.storage.fs.tree.file.JavaIOFileAdapterTest@5901d85a]" name="fileInfoAdapter" duration-ms="2" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fileInfoAdapter -->
        <test-method status="PASS" signature="folderInfoAdapter()[pri:0, instance:org.artifactory.storage.fs.tree.file.JavaIOFileAdapterTest@5901d85a]" name="folderInfoAdapter" duration-ms="2" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- folderInfoAdapter -->
      </class> <!-- org.artifactory.storage.fs.tree.file.JavaIOFileAdapterTest -->
      <class name="org.artifactory.api.security.PermissionTargetInfoTest">
        <test-method status="PASS" signature="copyConstructor()[pri:0, instance:org.artifactory.api.security.PermissionTargetInfoTest@17cdc4a5]" name="copyConstructor" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructor -->
        <test-method status="PASS" signature="copyConstructorReflectionEquality()[pri:0, instance:org.artifactory.api.security.PermissionTargetInfoTest@17cdc4a5]" name="copyConstructorReflectionEquality" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorReflectionEquality -->
        <test-method status="PASS" signature="createWithNoIncluesExcludesPatterns()[pri:0, instance:org.artifactory.api.security.PermissionTargetInfoTest@17cdc4a5]" name="createWithNoIncluesExcludesPatterns" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createWithNoIncluesExcludesPatterns -->
        <test-method status="PASS" signature="createWithIncluesAndExcludesPatterns()[pri:0, instance:org.artifactory.api.security.PermissionTargetInfoTest@17cdc4a5]" name="createWithIncluesAndExcludesPatterns" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createWithIncluesAndExcludesPatterns -->
        <test-method status="PASS" signature="testDefaultConstructor()[pri:0, instance:org.artifactory.api.security.PermissionTargetInfoTest@17cdc4a5]" name="testDefaultConstructor" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultConstructor -->
      </class> <!-- org.artifactory.api.security.PermissionTargetInfoTest -->
      <class name="org.artifactory.api.fs.FileInfoImplTest">
        <test-method status="PASS" signature="readMimeTypes()[pri:0, instance:org.artifactory.api.fs.FileInfoImplTest@5bdbda4f]" name="readMimeTypes" is-config="true" duration-ms="366" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readMimeTypes -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.api.fs.FileInfoImplTest@5bdbda4f]" name="bindArtifactoryHome" is-config="true" duration-ms="19" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="differentChecksumNotIdentical()[pri:0, instance:org.artifactory.api.fs.FileInfoImplTest@5bdbda4f]" name="differentChecksumNotIdentical" duration-ms="6" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- differentChecksumNotIdentical -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.api.fs.FileInfoImplTest@5bdbda4f]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
      </class> <!-- org.artifactory.api.fs.FileInfoImplTest -->
      <class name="org.artifactory.storage.StoragePropertiesTest">
        <test-method status="PASS" signature="failUnsupportedDatabaseType()[pri:0, instance:org.artifactory.storage.StoragePropertiesTest@67eb2e9f]" name="failUnsupportedDatabaseType" duration-ms="3" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Couldn't find db type matching the name 'Space']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Couldn't find db type matching the name 'Space'
	at org.artifactory.storage.db.DbType.parse(DbType.java:36)
	at org.artifactory.storage.StorageProperties.getDbType(StorageProperties.java:61)
	at org.artifactory.storage.StorageProperties.<init>(StorageProperties.java:57)
	at org.artifactory.storage.StoragePropertiesTest.failUnsupportedDatabaseType(StoragePropertiesTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failUnsupportedDatabaseType -->
        <test-method status="PASS" signature="minimalPropertiesFile()[pri:0, instance:org.artifactory.storage.StoragePropertiesTest@67eb2e9f]" name="minimalPropertiesFile" duration-ms="4" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minimalPropertiesFile -->
        <test-method status="PASS" signature="minimalWithCacheSize()[pri:0, instance:org.artifactory.storage.StoragePropertiesTest@67eb2e9f]" name="minimalWithCacheSize" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minimalWithCacheSize -->
      </class> <!-- org.artifactory.storage.StoragePropertiesTest -->
      <class name="org.artifactory.model.xstream.fs.PropertiesImplTest">
        <test-method status="PASS" signature="isEmpty()[pri:0, instance:org.artifactory.model.xstream.fs.PropertiesImplTest@577f5229]" name="isEmpty" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isEmpty -->
        <test-method status="PASS" signature="isEmptyAndNormalProperty()[pri:0, instance:org.artifactory.model.xstream.fs.PropertiesImplTest@577f5229]" name="isEmptyAndNormalProperty" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isEmptyAndNormalProperty -->
      </class> <!-- org.artifactory.model.xstream.fs.PropertiesImplTest -->
      <class name="org.artifactory.factory.xstream.ChecksumsInfoConverterTest">
        <test-method status="PASS" signature="testConversion()[pri:0, instance:org.artifactory.factory.xstream.ChecksumsInfoConverterTest@438da386]" name="testConversion" duration-ms="409" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConversion -->
      </class> <!-- org.artifactory.factory.xstream.ChecksumsInfoConverterTest -->
      <class name="org.artifactory.model.common.RepoPathTest">
        <test-method status="PASS" signature="archiveResourcePath()[pri:0, instance:org.artifactory.model.common.RepoPathTest@154f6d51]" name="archiveResourcePath" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- archiveResourcePath -->
        <test-method status="PASS" signature="archiveResourcePathLeadingSlash()[pri:0, instance:org.artifactory.model.common.RepoPathTest@154f6d51]" name="archiveResourcePathLeadingSlash" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- archiveResourcePathLeadingSlash -->
        <test-method status="PASS" signature="getParentRepoPathForRoot()[pri:0, instance:org.artifactory.model.common.RepoPathTest@154f6d51]" name="getParentRepoPathForRoot" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getParentRepoPathForRoot -->
        <test-method status="PASS" signature="getParentRepoPathLastParent()[pri:0, instance:org.artifactory.model.common.RepoPathTest@154f6d51]" name="getParentRepoPathLastParent" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getParentRepoPathLastParent -->
        <test-method status="PASS" signature="getParentRepoPathWithParent()[pri:0, instance:org.artifactory.model.common.RepoPathTest@154f6d51]" name="getParentRepoPathWithParent" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getParentRepoPathWithParent -->
        <test-method status="PASS" signature="getParentRepoPathWithNoParent()[pri:0, instance:org.artifactory.model.common.RepoPathTest@154f6d51]" name="getParentRepoPathWithNoParent" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getParentRepoPathWithNoParent -->
        <test-method status="PASS" signature="repoRootPath()[pri:0, instance:org.artifactory.model.common.RepoPathTest@154f6d51]" name="repoRootPath" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- repoRootPath -->
        <test-method status="PASS" signature="rootPath()[pri:0, instance:org.artifactory.model.common.RepoPathTest@154f6d51]" name="rootPath" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rootPath -->
        <test-method status="PASS" signature="toPathRootRepoPath()[pri:0, instance:org.artifactory.model.common.RepoPathTest@154f6d51]" name="toPathRootRepoPath" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toPathRootRepoPath -->
        <test-method status="PASS" signature="toPathWithRelativePath()[pri:0, instance:org.artifactory.model.common.RepoPathTest@154f6d51]" name="toPathWithRelativePath" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toPathWithRelativePath -->
      </class> <!-- org.artifactory.model.common.RepoPathTest -->
      <class name="org.artifactory.api.security.GroupInfoTest">
        <test-method status="PASS" signature="copyConstructor()[pri:0, instance:org.artifactory.api.security.GroupInfoTest@462938d8]" name="copyConstructor" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructor -->
        <test-method status="PASS" signature="defaultConstructor()[pri:0, instance:org.artifactory.api.security.GroupInfoTest@462938d8]" name="defaultConstructor" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultConstructor -->
      </class> <!-- org.artifactory.api.security.GroupInfoTest -->
      <class name="org.artifactory.api.fs.ZipEntriesTreeTest">
        <test-method status="PASS" signature="buildTree()[pri:0, instance:org.artifactory.api.fs.ZipEntriesTreeTest@3c5310e4]" name="buildTree" duration-ms="3" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildTree -->
      </class> <!-- org.artifactory.api.fs.ZipEntriesTreeTest -->
      <class name="org.artifactory.storage.db.DbTypeTest">
        <test-method status="PASS" signature="parseEmpty()[pri:0, instance:org.artifactory.storage.db.DbTypeTest@28de768]" name="parseEmpty" duration-ms="2" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Couldn't find db type matching the name '']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Couldn't find db type matching the name ''
	at org.artifactory.storage.db.DbType.parse(DbType.java:36)
	at org.artifactory.storage.db.DbTypeTest.parseEmpty(DbTypeTest.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseEmpty -->
        <test-method status="PASS" signature="parseNotSupported()[pri:0, instance:org.artifactory.storage.db.DbTypeTest@28de768]" name="parseNotSupported" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Couldn't find db type matching the name 'nosql']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Couldn't find db type matching the name 'nosql'
	at org.artifactory.storage.db.DbType.parse(DbType.java:36)
	at org.artifactory.storage.db.DbTypeTest.parseNotSupported(DbTypeTest.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseNotSupported -->
        <test-method status="PASS" signature="parseNull()[pri:0, instance:org.artifactory.storage.db.DbTypeTest@28de768]" name="parseNull" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Couldn't find db type matching the name 'null']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Couldn't find db type matching the name 'null'
	at org.artifactory.storage.db.DbType.parse(DbType.java:36)
	at org.artifactory.storage.db.DbTypeTest.parseNull(DbTypeTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseNull -->
        <test-method status="PASS" signature="parseSupported()[pri:0, instance:org.artifactory.storage.db.DbTypeTest@28de768]" name="parseSupported" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseSupported -->
        <test-method status="PASS" signature="parseSupportedCapitals()[pri:0, instance:org.artifactory.storage.db.DbTypeTest@28de768]" name="parseSupportedCapitals" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseSupportedCapitals -->
      </class> <!-- org.artifactory.storage.db.DbTypeTest -->
      <class name="org.artifactory.util.RepoPathUtilsTest">
        <test-method status="PASS" signature="getAncestorBeyondRoot()[pri:0, instance:org.artifactory.util.RepoPathUtilsTest@5213da08]" name="getAncestorBeyondRoot" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAncestorBeyondRoot -->
        <test-method status="PASS" signature="getAncestorGrandParent()[pri:0, instance:org.artifactory.util.RepoPathUtilsTest@5213da08]" name="getAncestorGrandParent" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAncestorGrandParent -->
        <test-method status="PASS" signature="getAncestorOfRoot()[pri:0, instance:org.artifactory.util.RepoPathUtilsTest@5213da08]" name="getAncestorOfRoot" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAncestorOfRoot -->
        <test-method status="PASS" signature="getAncestorParent()[pri:0, instance:org.artifactory.util.RepoPathUtilsTest@5213da08]" name="getAncestorParent" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAncestorParent -->
      </class> <!-- org.artifactory.util.RepoPathUtilsTest -->
      <class name="org.artifactory.api.security.UserInfoTest">
        <test-method status="PASS" signature="addRemoveGroup()[pri:0, instance:org.artifactory.api.security.UserInfoTest@77b22abc]" name="addRemoveGroup" duration-ms="2" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemoveGroup -->
        <test-method status="PASS" signature="copyConstructor()[pri:0, instance:org.artifactory.api.security.UserInfoTest@77b22abc]" name="copyConstructor" duration-ms="9" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructor -->
      </class> <!-- org.artifactory.api.security.UserInfoTest -->
      <class name="org.artifactory.api.fs.FileAdditionalInfoTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.artifactory.api.fs.FileAdditionalInfoTest@41aa7618]" name="setup" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="copyConstructor()[pri:0, instance:org.artifactory.api.fs.FileAdditionalInfoTest@41aa7618]" name="copyConstructor" duration-ms="3" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructor -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.artifactory.api.fs.FileAdditionalInfoTest@41aa7618]" name="setup" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="defaultConstructor()[pri:0, instance:org.artifactory.api.fs.FileAdditionalInfoTest@41aa7618]" name="defaultConstructor" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultConstructor -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.artifactory.api.fs.FileAdditionalInfoTest@41aa7618]" name="setup" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="settingChecksums()[pri:0, instance:org.artifactory.api.fs.FileAdditionalInfoTest@41aa7618]" name="settingChecksums" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- settingChecksums -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.artifactory.api.fs.FileAdditionalInfoTest@41aa7618]" name="setup" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.artifactory.api.fs.FileAdditionalInfoTest@41aa7618]" name="setup" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testIsIdentical()[pri:0, instance:org.artifactory.api.fs.FileAdditionalInfoTest@41aa7618]" name="testIsIdentical" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsIdentical -->
        <test-method status="PASS" signature="testNotIdentical()[pri:0, instance:org.artifactory.api.fs.FileAdditionalInfoTest@41aa7618]" name="testNotIdentical" duration-ms="1" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNotIdentical -->
      </class> <!-- org.artifactory.api.fs.FileAdditionalInfoTest -->
      <class name="org.artifactory.factory.xstream.PropertiesConverterTest">
        <test-method status="PASS" signature="testConversion()[pri:0, instance:org.artifactory.factory.xstream.PropertiesConverterTest@141fe06]" name="testConversion" duration-ms="27" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConversion -->
      </class> <!-- org.artifactory.factory.xstream.PropertiesConverterTest -->
      <class name="org.artifactory.repo.InternalRepoPathFactoryTest">
        <test-method status="PASS" signature="cacheRepoPathFromCache()[pri:0, instance:org.artifactory.repo.InternalRepoPathFactoryTest@138c3c8f]" name="cacheRepoPathFromCache" duration-ms="12" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cacheRepoPathFromCache -->
        <test-method status="PASS" signature="cacheRepoPathFromRemote()[pri:0, instance:org.artifactory.repo.InternalRepoPathFactoryTest@138c3c8f]" name="cacheRepoPathFromRemote" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cacheRepoPathFromRemote -->
        <test-method status="PASS" signature="cacheRepoPathFromRootRepoPath()[pri:0, instance:org.artifactory.repo.InternalRepoPathFactoryTest@138c3c8f]" name="cacheRepoPathFromRootRepoPath" duration-ms="0" started-at="2013-05-13T13:11:41Z" finished-at="2013-05-13T13:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cacheRepoPathFromRootRepoPath -->
      </class> <!-- org.artifactory.repo.InternalRepoPathFactoryTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
